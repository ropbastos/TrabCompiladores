  
/* Declarações Globais */

int i;
int i, i2;
float f;
bool b;
char c;
string s;

static int a[1];
static int a[1], b;


/* Definição de Funções */

int func1(){}
static float func2(){}
bool func3(int a){}
char func4(int a, float b){}
string func5(const char b){}


/* Definição Bloco de Comando */

int blocks() {
  {};
  {
    {

    };
  };
}

/* Definição Bloco Simples */

int simpleBlocks() {
  /* Declaração de Variavel Local */

  int a, b <= 2;
  int a <= 4, c;
  float a, c <= 2, b;
  const float c;
  const int a <= 10;
  static const int a <= 10;
  static float c;


  /* Atribuição */

  b = 12;
  b[2] = 12;



  /* Comandos de Entrada e Saída */

  input a;
  output b;
  output 5;
  output 'a';
  output false;
  output true;
  output 4.5;


  /* Chamada de Função */

  abc(b);


  /* Comandos de Shift */
  a << 2;
  b >> 3;


  /* Comando de Retorno, Break, Continue */
  return;
  return 5;
  break;
  continue;


  /* Comandos de Controle de Fluxo */
  if (a) {};
  if (b) {} else {};

  for (a = 2 : a : a = c) {};

  while ( a ) do {};


  /* Expressões Aritméticas, Lógicas */

  a = b * (a * 2);
  a = b;
  a = b * c + &v;


  abc(a * b);
  abc(a * b + c);
  abc(a * b + (c * d));
  abc(a * b + (c && d));
  abc(a * main((a / b), (a % b)));

  abc(a * b + &a);
  abc(-a * #b);
  abc(false * b);

  abc(false * ?a);

  abc( a * b ? a * 2 : b * 3);

  abc(id);

}